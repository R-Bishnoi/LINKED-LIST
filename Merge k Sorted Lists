class CompareNode{
    public:
    bool operator()(const ListNode* a,const ListNode* b){
        return a->val > b->val;
    }
};



class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
      
   ListNode* head=new ListNode(-1);
   ListNode* temp=head;
        
priority_queue<ListNode*,vector<ListNode*>,CompareNode>pq;
        
        
for(int i=0;i<lists.size();i++){
    if(lists[i]!=NULL)pq.push(lists[i]);
}

while(!pq.empty()){
    ListNode* curr=pq.top();
    pq.pop();
    temp->next=new ListNode(curr->val);
    temp=temp->next;
    if(curr->next)pq.push(curr->next);
}
        
  return head->next;      
        
    }
};




